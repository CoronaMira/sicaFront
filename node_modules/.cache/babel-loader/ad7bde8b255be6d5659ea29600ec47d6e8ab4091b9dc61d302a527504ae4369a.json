{"ast":null,"code":"// --- Mock Service para Autenticación (Modelo) ---\nexport const authService = {\n  users: [{\n    id: 1,\n    username: 'admin',\n    password: '123',\n    name: 'Admin General',\n    role: 'Administrador'\n  }, {\n    id: 2,\n    username: 'j.perez',\n    password: '123',\n    name: 'Juan Perez',\n    role: 'Profesor'\n  }, {\n    id: 3,\n    username: 'a.gomez',\n    password: '123',\n    name: 'Ana Gomez',\n    role: 'Estudiante'\n  }],\n  login: async (username, password) => {\n    console.log(`Intentando iniciar sesión con: ${username}`);\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const user = authService.users.find(u => u.username === username && u.password === password);\n        if (user) {\n          console.log(\"Usuario encontrado:\", user);\n          resolve(user);\n        } else {\n          console.log(\"Credenciales inválidas\");\n          reject('Usuario o contraseña incorrectos.');\n        }\n      }, 500);\n    });\n  },\n  logout: async () => {\n    console.log(\"Cerrando sesión\");\n    return new Promise(resolve => setTimeout(resolve, 300));\n  }\n};","map":{"version":3,"names":["authService","users","id","username","password","name","role","login","console","log","Promise","resolve","reject","setTimeout","user","find","u","logout"],"sources":["/Users/nayelicorona/Documents/UTN/cuatrimestre4/AplicacionesWeb/sica/sicaFront/src/services/authService.js"],"sourcesContent":["// --- Mock Service para Autenticación (Modelo) ---\nexport const authService = {\n    users: [\n        { id: 1, username: 'admin', password: '123', name: 'Admin General', role: 'Administrador' },\n        { id: 2, username: 'j.perez', password: '123', name: 'Juan Perez', role: 'Profesor' },\n        { id: 3, username: 'a.gomez', password: '123', name: 'Ana Gomez', role: 'Estudiante' },\n    ],\n    login: async (username, password) => {\n        console.log(`Intentando iniciar sesión con: ${username}`);\n        return new Promise((resolve, reject) => {\n            setTimeout(() => {\n                const user = authService.users.find(u => u.username === username && u.password === password);\n                if (user) {\n                    console.log(\"Usuario encontrado:\", user);\n                    resolve(user);\n                } else {\n                    console.log(\"Credenciales inválidas\");\n                    reject('Usuario o contraseña incorrectos.');\n                }\n            }, 500);\n        });\n    },\n    logout: async () => {\n        console.log(\"Cerrando sesión\");\n        return new Promise(resolve => setTimeout(resolve, 300));\n    }\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG;EACvBC,KAAK,EAAE,CACH;IAAEC,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,OAAO;IAAEC,QAAQ,EAAE,KAAK;IAAEC,IAAI,EAAE,eAAe;IAAEC,IAAI,EAAE;EAAgB,CAAC,EAC3F;IAAEJ,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,SAAS;IAAEC,QAAQ,EAAE,KAAK;IAAEC,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE;EAAW,CAAC,EACrF;IAAEJ,EAAE,EAAE,CAAC;IAAEC,QAAQ,EAAE,SAAS;IAAEC,QAAQ,EAAE,KAAK;IAAEC,IAAI,EAAE,WAAW;IAAEC,IAAI,EAAE;EAAa,CAAC,CACzF;EACDC,KAAK,EAAE,MAAAA,CAAOJ,QAAQ,EAAEC,QAAQ,KAAK;IACjCI,OAAO,CAACC,GAAG,CAAC,kCAAkCN,QAAQ,EAAE,CAAC;IACzD,OAAO,IAAIO,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCC,UAAU,CAAC,MAAM;QACb,MAAMC,IAAI,GAAGd,WAAW,CAACC,KAAK,CAACc,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,QAAQ,KAAKA,QAAQ,IAAIa,CAAC,CAACZ,QAAQ,KAAKA,QAAQ,CAAC;QAC5F,IAAIU,IAAI,EAAE;UACNN,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEK,IAAI,CAAC;UACxCH,OAAO,CAACG,IAAI,CAAC;QACjB,CAAC,MAAM;UACHN,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;UACrCG,MAAM,CAAC,mCAAmC,CAAC;QAC/C;MACJ,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,CAAC;EACN,CAAC;EACDK,MAAM,EAAE,MAAAA,CAAA,KAAY;IAChBT,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAIE,UAAU,CAACF,OAAO,EAAE,GAAG,CAAC,CAAC;EAC3D;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}