{"ast":null,"code":"var _jsxFileName = \"/Users/nayelicorona/Documents/UTN/cuatrimestre4/AplicacionesWeb/sica-proyect/src/components/pages/RegisterFingerprintPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { apiService } from 'services/apiService';\nimport FormCard from 'components/commons/FormCard';\nimport { Fingerprint } from 'lucide-react';\nimport 'assets/styles/RegisterFingerprintPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterFingerprintPage = () => {\n  _s();\n  const [personnel, setPersonnel] = useState([]);\n  const [selectedUser, setSelectedUser] = useState('');\n  const [scanStatus, setScanStatus] = useState('idle'); // idle, scanning, success, error\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    apiService.getPersonnel().then(setPersonnel);\n  }, []);\n  const handleScan = () => {\n    if (!selectedUser) {\n      setScanStatus('error');\n      setMessage('Por favor, seleccione una persona para registrar su huella.');\n      setTimeout(() => {\n        setScanStatus('idle');\n        setMessage('');\n      }, 3000);\n      return;\n    }\n    setScanStatus('scanning');\n    setMessage('Coloque el dedo en el sensor...');\n\n    // Simulación de escaneo\n    setTimeout(() => {\n      const isSuccess = Math.random() > 0.1; // 90% de éxito\n      if (isSuccess) {\n        var _personnel$find;\n        const userName = ((_personnel$find = personnel.find(p => p.id.toString() === selectedUser)) === null || _personnel$find === void 0 ? void 0 : _personnel$find.name) || 'Usuario';\n        setScanStatus('success');\n        setMessage(`Huella registrada exitosamente para ${userName}.`);\n      } else {\n        setScanStatus('error');\n        setMessage('Error de escaneo. Por favor, intente de nuevo.');\n      }\n    }, 2500);\n    setTimeout(() => {\n      setScanStatus('idle');\n      setMessage('');\n      setSelectedUser('');\n    }, 7000);\n  };\n  const getStatusColorClass = () => {\n    switch (scanStatus) {\n      case 'scanning':\n        return 'status-scanning';\n      case 'success':\n        return 'status-success';\n      case 'error':\n        return 'status-error';\n      default:\n        return 'status-idle';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: /*#__PURE__*/_jsxDEV(FormCard, {\n      title: \"Registro de Huella Digital\",\n      icon: Fingerprint,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fingerprint-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"user-select\",\n            className: \"input-label\",\n            children: \"Seleccionar Persona\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"user-select\",\n            className: \"select-element\",\n            value: selectedUser,\n            onChange: e => setSelectedUser(e.target.value),\n            disabled: scanStatus !== 'idle',\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Seleccione un usuario --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this), personnel.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p.id,\n              children: [p.name, \" - \", p.role]\n            }, p.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 49\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scan-area\",\n          children: [/*#__PURE__*/_jsxDEV(Fingerprint, {\n            className: `scan-icon ${getStatusColorClass()}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `scan-message ${getStatusColorClass()}`,\n            children: scanStatus === 'idle' ? 'Esperando para escanear' : message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleScan,\n          disabled: scanStatus !== 'idle',\n          className: \"submit-button\",\n          children: scanStatus === 'idle' ? 'Iniciar Escaneo' : 'Escaneando...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterFingerprintPage, \"w7GlBPjWNAs3bOMHisffaPJlhDs=\");\n_c = RegisterFingerprintPage;\nexport default RegisterFingerprintPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterFingerprintPage\");","map":{"version":3,"names":["React","useState","useEffect","apiService","FormCard","Fingerprint","jsxDEV","_jsxDEV","RegisterFingerprintPage","_s","personnel","setPersonnel","selectedUser","setSelectedUser","scanStatus","setScanStatus","message","setMessage","getPersonnel","then","handleScan","setTimeout","isSuccess","Math","random","_personnel$find","userName","find","p","id","toString","name","getStatusColorClass","className","children","title","icon","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","disabled","map","role","onClick","_c","$RefreshReg$"],"sources":["/Users/nayelicorona/Documents/UTN/cuatrimestre4/AplicacionesWeb/sica-proyect/src/components/pages/RegisterFingerprintPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { apiService } from 'services/apiService';\nimport FormCard from 'components/commons/FormCard';\nimport { Fingerprint } from 'lucide-react';\nimport 'assets/styles/RegisterFingerprintPage.css';\n\nconst RegisterFingerprintPage = () => {\n    const [personnel, setPersonnel] = useState([]);\n    const [selectedUser, setSelectedUser] = useState('');\n    const [scanStatus, setScanStatus] = useState('idle'); // idle, scanning, success, error\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        apiService.getPersonnel().then(setPersonnel);\n    }, []);\n\n    const handleScan = () => {\n        if (!selectedUser) {\n            setScanStatus('error');\n            setMessage('Por favor, seleccione una persona para registrar su huella.');\n            setTimeout(() => {\n                setScanStatus('idle');\n                setMessage('');\n            }, 3000);\n            return;\n        }\n        setScanStatus('scanning');\n        setMessage('Coloque el dedo en el sensor...');\n\n        // Simulación de escaneo\n        setTimeout(() => {\n            const isSuccess = Math.random() > 0.1; // 90% de éxito\n            if (isSuccess) {\n                const userName = personnel.find(p => p.id.toString() === selectedUser)?.name || 'Usuario';\n                setScanStatus('success');\n                setMessage(`Huella registrada exitosamente para ${userName}.`);\n            } else {\n                setScanStatus('error');\n                setMessage('Error de escaneo. Por favor, intente de nuevo.');\n            }\n        }, 2500);\n\n        setTimeout(() => {\n            setScanStatus('idle');\n            setMessage('');\n            setSelectedUser('');\n        }, 7000);\n    };\n\n    const getStatusColorClass = () => {\n        switch (scanStatus) {\n            case 'scanning': return 'status-scanning';\n            case 'success': return 'status-success';\n            case 'error': return 'status-error';\n            default: return 'status-idle';\n        }\n    };\n\n    return (\n        <div className=\"page-container\">\n            <FormCard title=\"Registro de Huella Digital\" icon={Fingerprint}>\n                <div className=\"fingerprint-content\">\n                    <div>\n                        <label htmlFor=\"user-select\" className=\"input-label\">Seleccionar Persona</label>\n                        <select\n                            id=\"user-select\"\n                            className=\"select-element\"\n                            value={selectedUser}\n                            onChange={(e) => setSelectedUser(e.target.value)}\n                            disabled={scanStatus !== 'idle'}\n                        >\n                            <option value=\"\">-- Seleccione un usuario --</option>\n                            {personnel.map(p => <option key={p.id} value={p.id}>{p.name} - {p.role}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"scan-area\">\n                        <Fingerprint className={`scan-icon ${getStatusColorClass()}`} />\n                        <p className={`scan-message ${getStatusColorClass()}`}>\n                            {scanStatus === 'idle' ? 'Esperando para escanear' : message}\n                        </p>\n                    </div>\n                    <button\n                        onClick={handleScan}\n                        disabled={scanStatus !== 'idle'}\n                        className=\"submit-button\"\n                    >\n                        {scanStatus === 'idle' ? 'Iniciar Escaneo' : 'Escaneando...'}\n                    </button>\n                </div>\n            </FormCard>\n        </div>\n    );\n};\n\nexport default RegisterFingerprintPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}