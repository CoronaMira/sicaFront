{"ast":null,"code":"// --- Mock Service para API de datos (Modelo) ---\nexport const apiService = {\n  universityPersonnel: [{\n    id: 101,\n    name: 'Dr. Carlos Santana',\n    role: 'Rector',\n    registrationDate: '2023-01-15'\n  }, {\n    id: 102,\n    name: 'Lic. Maria Rodriguez',\n    role: 'Coordinadora Académica',\n    registrationDate: '2023-02-20'\n  }],\n  visitors: [{\n    id: 201,\n    name: 'CONGRESO-24-1',\n    reason: 'Congreso de IA',\n    validUntil: '2024-10-30'\n  }],\n  accessLogs: [{\n    id: 1,\n    userId: 2,\n    userName: 'Juan Perez',\n    date: '2024-07-26',\n    time: '08:01:15',\n    accessPoint: 'Entrada Principal',\n    status: 'Concedido'\n  }, {\n    id: 2,\n    userId: 3,\n    userName: 'Ana Gomez',\n    date: '2024-07-26',\n    time: '08:03:45',\n    accessPoint: 'Biblioteca',\n    status: 'Concedido'\n  }, {\n    id: 3,\n    userId: 99,\n    userName: 'Desconocido',\n    date: '2024-07-26',\n    time: '08:05:00',\n    accessPoint: 'Entrada Principal',\n    status: 'Denegado'\n  }, {\n    id: 4,\n    userId: 2,\n    userName: 'Juan Perez',\n    date: '2024-07-26',\n    time: '10:30:10',\n    accessPoint: 'Laboratorio de Cómputo',\n    status: 'Concedido'\n  }],\n  getPersonnel: async () => {\n    return new Promise(resolve => setTimeout(() => resolve([...apiService.universityPersonnel]), 300));\n  },\n  addPersonnel: async person => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const newPerson = {\n          ...person,\n          id: Date.now(),\n          registrationDate: new Date().toISOString().split('T')[0]\n        };\n        apiService.universityPersonnel.push(newPerson);\n        console.log(\"Personal actualizado:\", apiService.universityPersonnel);\n        resolve(newPerson);\n      }, 500);\n    });\n  },\n  getVisitors: async () => {\n    return new Promise(resolve => setTimeout(() => resolve([...apiService.visitors]), 300));\n  },\n  addVisitor: async visitor => {\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const newVisitor = {\n          ...visitor,\n          id: Date.now()\n        };\n        apiService.visitors.push(newVisitor);\n        resolve(newVisitor);\n      }, 500);\n    });\n  },\n  getAccessLogs: async () => {\n    return new Promise(resolve => setTimeout(() => resolve([...apiService.accessLogs]), 300));\n  }\n};","map":{"version":3,"names":["apiService","universityPersonnel","id","name","role","registrationDate","visitors","reason","validUntil","accessLogs","userId","userName","date","time","accessPoint","status","getPersonnel","Promise","resolve","setTimeout","addPersonnel","person","newPerson","Date","now","toISOString","split","push","console","log","getVisitors","addVisitor","visitor","newVisitor","getAccessLogs"],"sources":["/Users/nayelicorona/Documents/UTN/cuatrimestre4/AplicacionesWeb/sica-proyect/src/services/apiService.js"],"sourcesContent":["// --- Mock Service para API de datos (Modelo) ---\nexport const apiService = {\n    universityPersonnel: [\n        { id: 101, name: 'Dr. Carlos Santana', role: 'Rector', registrationDate: '2023-01-15' },\n        { id: 102, name: 'Lic. Maria Rodriguez', role: 'Coordinadora Académica', registrationDate: '2023-02-20' },\n    ],\n    visitors: [\n        { id: 201, name: 'CONGRESO-24-1', reason: 'Congreso de IA', validUntil: '2024-10-30' },\n    ],\n    accessLogs: [\n        { id: 1, userId: 2, userName: 'Juan Perez', date: '2024-07-26', time: '08:01:15', accessPoint: 'Entrada Principal', status: 'Concedido' },\n        { id: 2, userId: 3, userName: 'Ana Gomez', date: '2024-07-26', time: '08:03:45', accessPoint: 'Biblioteca', status: 'Concedido' },\n        { id: 3, userId: 99, userName: 'Desconocido', date: '2024-07-26', time: '08:05:00', accessPoint: 'Entrada Principal', status: 'Denegado' },\n        { id: 4, userId: 2, userName: 'Juan Perez', date: '2024-07-26', time: '10:30:10', accessPoint: 'Laboratorio de Cómputo', status: 'Concedido' },\n    ],\n\n    getPersonnel: async () => {\n        return new Promise(resolve => setTimeout(() => resolve([...apiService.universityPersonnel]), 300));\n    },\n    addPersonnel: async (person) => {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                const newPerson = { ...person, id: Date.now(), registrationDate: new Date().toISOString().split('T')[0] };\n                apiService.universityPersonnel.push(newPerson);\n                console.log(\"Personal actualizado:\", apiService.universityPersonnel);\n                resolve(newPerson);\n            }, 500);\n        });\n    },\n    getVisitors: async () => {\n        return new Promise(resolve => setTimeout(() => resolve([...apiService.visitors]), 300));\n    },\n    addVisitor: async (visitor) => {\n        return new Promise(resolve => {\n            setTimeout(() => {\n                const newVisitor = { ...visitor, id: Date.now() };\n                apiService.visitors.push(newVisitor);\n                resolve(newVisitor);\n            }, 500);\n        });\n    },\n    getAccessLogs: async () => {\n        return new Promise(resolve => setTimeout(() => resolve([...apiService.accessLogs]), 300));\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}